// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String?  // Optional for customers who don't create accounts
  name      String
  role      Role     @default(CUSTOMER)
  country   String?
  phone     String?
  company   String?
  active    Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  assignedQuotes QuoteRequest[] @relation("AssignedQuotes")

  @@map("users")
}

model Product {
  id            String   @id @default(cuid())
  nameAr        String
  nameEn        String
  nameEs        String
  nameFr        String
  category      ProductCategory
  descriptionAr String
  descriptionEn String
  descriptionEs String
  descriptionFr String
  thickness     String
  finishes      String
  originCountry String
  images        Json
  slug          String   @unique
  featured      Boolean  @default(false)
  active        Boolean  @default(true)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@map("products")
}

model BlogPost {
  id              String   @id @default(cuid())
  titleAr         String
  titleEn         String
  titleEs         String
  titleFr         String
  contentAr       String
  contentEn       String
  contentEs       String
  contentFr       String
  excerpt         String?
  metaTitle       String?
  metaDescription String?
  slug            String   @unique
  featured        Boolean  @default(false)
  published       Boolean  @default(false)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  @@map("blog_posts")
}

model QuoteRequest {
  id            String              @id @default(cuid())
  // Personal Information
  fullName      String
  email         String
  phone         String
  company       String?
  country       String
  city          String?
  
  // Project Information
  projectType   String
  projectName   String?
  expectedDate  DateTime?
  budget        String?
  
  // Product Requirements
  productType   String
  quantity      String
  thickness     String?
  finish        String?
  dimensions    String?
  color         String?
  
  // Additional Information
  message       String?
  attachments   Json?               // Array of file paths
  
  // System fields
  status        QuoteRequestStatus  @default(PENDING)
  priority      Priority            @default(NORMAL)
  assignedTo    String?             // Admin user ID
  internalNotes String?
  quotedPrice   Float?
  quotedAt      DateTime?
  createdAt     DateTime            @default(now())
  updatedAt     DateTime            @updatedAt

  // Relations
  assignedUser  User?               @relation("AssignedQuotes", fields: [assignedTo], references: [id])
  responses     QuoteResponse[]

  @@map("quote_requests")
}

model QuoteResponse {
  id            String       @id @default(cuid())
  quoteId       String
  message       String
  attachments   Json?        // Array of file paths
  isInternal    Boolean      @default(false) // Internal notes vs customer communication
  createdBy     String       // User ID
  createdAt     DateTime     @default(now())

  quote         QuoteRequest @relation(fields: [quoteId], references: [id], onDelete: Cascade)

  @@map("quote_responses")
}

model ContactMessage {
  id        String              @id @default(cuid())
  name      String
  email     String
  phone     String?
  company   String?
  subject   String?
  message   String
  status    ContactStatus       @default(NEW)
  readAt    DateTime?
  createdAt DateTime            @default(now())
  updatedAt DateTime            @updatedAt

  @@map("contact_messages")
}

model Newsletter {
  id          String            @id @default(cuid())
  email       String            @unique
  name        String?
  status      NewsletterStatus  @default(ACTIVE)
  subscribedAt DateTime         @default(now())
  unsubscribedAt DateTime?

  @@map("newsletter_subscribers")
}

model SiteSetting {
  id    String @id @default(cuid())
  key   String @unique
  value Json

  @@map("site_settings")
}

model FileUpload {
  id          String    @id @default(cuid())
  filename    String
  originalName String
  mimetype    String
  size        Int
  path        String
  url         String
  uploadedBy  String?   // User ID
  createdAt   DateTime  @default(now())

  @@map("file_uploads")
}

enum Role {
  ADMIN
  EDITOR
  CUSTOMER
}

enum ProductCategory {
  MARBLE
  GRANITE
  QUARTZ
  SPECIAL
}

enum QuoteRequestStatus {
  PENDING     // في الانتظار
  REVIEWED    // تمت المراجعة
  PROCESSING  // قيد المعالجة
  QUOTED      // تم إرسال العرض
  ACCEPTED    // تم قبول العرض
  REJECTED    // تم رفض العرض
  COMPLETED   // مكتمل
  CANCELLED   // ملغي
}

enum Priority {
  LOW
  NORMAL
  HIGH
  URGENT
}

enum ContactStatus {
  NEW
  READ
  REPLIED
  CLOSED
}

enum NewsletterStatus {
  ACTIVE
  UNSUBSCRIBED
  BOUNCED
}
