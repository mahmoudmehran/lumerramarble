// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String?  // Optional for customers who don't create accounts
  name      String
  role      Role     @default(CUSTOMER)
  country   String?
  phone     String?
  company   String?
  active    Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  assignedQuotes QuoteRequest[] @relation("AssignedQuotes")
  blogPosts      BlogPost[]     @relation("BlogAuthor")

  @@map("users")
}

model Product {
  id            String   @id @default(cuid())
  nameAr        String
  nameEn        String
  nameEs        String
  nameFr        String
  category      ProductCategory
  descriptionAr String
  descriptionEn String
  descriptionEs String
  descriptionFr String
  thickness     String
  finishes      String
  originCountry String
  images        Json
  slug          String   @unique
  featured      Boolean  @default(false)
  active        Boolean  @default(true)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@map("products")
}

model BlogPost {
  id              String   @id @default(cuid())
  titleAr         String
  titleEn         String
  titleEs         String
  titleFr         String
  contentAr       String
  contentEn       String
  contentEs       String
  contentFr       String
  excerpt         String?
  excerptAr       String?
  excerptEn       String?
  excerptEs       String?
  excerptFr       String?
  metaTitle       String?
  metaDescription String?
  slug            String   @unique
  featured        Boolean  @default(false)
  published       Boolean  @default(false)
  
  // New fields
  featuredImage   String?
  views           Int      @default(0)
  tags            String?  // Comma-separated tags
  
  // Author relation
  authorId        String?
  author          User?    @relation("BlogAuthor", fields: [authorId], references: [id])
  
  // Category relation
  categoryId      String?
  category        Category? @relation("BlogCategory", fields: [categoryId], references: [id])
  
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  @@map("blog_posts")
}

model QuoteRequest {
  id            String              @id @default(cuid())
  // Personal Information
  fullName      String
  email         String
  phone         String
  company       String?
  country       String
  city          String?
  
  // Project Information
  projectType   String
  projectName   String?
  expectedDate  DateTime?
  budget        String?
  
  // Product Requirements
  productType   String
  quantity      String
  thickness     String?
  finish        String?
  dimensions    String?
  color         String?
  
  // Additional Information
  message       String?
  attachments   Json?               // Array of file paths
  
  // System fields
  status        QuoteRequestStatus  @default(PENDING)
  priority      Priority            @default(NORMAL)
  assignedTo    String?             // Admin user ID
  internalNotes String?
  quotedPrice   Float?
  quotedAt      DateTime?
  createdAt     DateTime            @default(now())
  updatedAt     DateTime            @updatedAt

  // Relations
  assignedUser  User?               @relation("AssignedQuotes", fields: [assignedTo], references: [id])
  responses     QuoteResponse[]

  @@map("quote_requests")
}

model QuoteResponse {
  id            String       @id @default(cuid())
  quoteId       String
  message       String
  attachments   Json?        // Array of file paths
  isInternal    Boolean      @default(false) // Internal notes vs customer communication
  createdBy     String       // User ID
  createdAt     DateTime     @default(now())

  quote         QuoteRequest @relation(fields: [quoteId], references: [id], onDelete: Cascade)

  @@map("quote_responses")
}

model ContactMessage {
  id        String              @id @default(cuid())
  name      String
  email     String
  phone     String?
  company   String?
  subject   String?
  message   String
  status    ContactStatus       @default(NEW)
  readAt    DateTime?
  createdAt DateTime            @default(now())
  updatedAt DateTime            @updatedAt

  @@map("contact_messages")
}

model Newsletter {
  id          String            @id @default(cuid())
  email       String            @unique
  name        String?
  status      NewsletterStatus  @default(ACTIVE)
  subscribedAt DateTime         @default(now())
  unsubscribedAt DateTime?

  @@map("newsletter_subscribers")
}

model SiteSettings {
  id                String   @id @default(cuid())
  // Company Information
  companyName       String   @default("Lumerra Marble")
  companyNameAr     String   @default("شركة لوميرا للرخام")
  description       String?
  descriptionAr     String?
  
  // Contact Information
  phone             String?
  email             String?
  whatsapp          String?
  address           String?
  addressAr         String?
  
  // Social Media
  facebook          String?
  instagram         String?
  linkedin          String?
  youtube           String?
  
  // SEO Settings
  metaTitle         String?
  metaTitleAr       String?
  metaDescription   String?
  metaDescriptionAr String?
  keywords          String?
  keywordsAr        String?
  
  // Business Information
  businessHours     String?
  businessHoursAr   String?
  
  // Theme Colors (5-color system)
  primaryColor      String   @default("#f59000")    // Header/Footer/Main sections
  secondaryColor    String   @default("#2c3e50")    // Buttons and interactive elements
  tertiaryColor     String   @default("#34495e")    // Important text (headings, company info)
  quaternaryColor   String   @default("#2c3e50")    // General text
  quinaryColor      String   @default("#ffffff")    // Opposite of quaternary (background text)
  
  // System fields
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  @@map("site_settings_new")
}

model FileUpload {
  id          String    @id @default(cuid())
  filename    String
  originalName String
  mimetype    String
  size        Int
  path        String
  url         String
  uploadedBy  String?   // User ID
  createdAt   DateTime  @default(now())

  @@map("file_uploads")
}

// نظام إدارة المحتوى الديناميكي
model PageContent {
  id            String   @id @default(cuid())
  pageKey       String   // homepage, about, export, contact, etc.
  sectionKey    String   // hero, stats, features, etc.  
  contentKey    String   // title, subtitle, description, etc.
  
  // محتوى متعدد اللغات
  valueAr       String?
  valueEn       String?
  valueEs       String?
  valueFr       String?
  
  // نوع المحتوى
  contentType   ContentType @default(TEXT)
  
  // ترتيب العرض
  sortOrder     Int      @default(0)
  
  // حالة النشر
  isActive      Boolean  @default(true)
  
  // تواريخ النظام
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  
  // فهرس فريد للمحتوى
  @@unique([pageKey, sectionKey, contentKey])
  @@map("page_contents")
}

// إعدادات SEO لكل صفحة
model PageSEO {
  id                String   @id @default(cuid())
  pageKey           String   @unique // homepage, about, export, etc.
  
  // Meta Tags متعددة اللغات
  titleAr           String?
  titleEn           String?
  titleEs           String?
  titleFr           String?
  
  descriptionAr     String?
  descriptionEn     String?
  descriptionEs     String?
  descriptionFr     String?
  
  keywordsAr        String?
  keywordsEn        String?
  keywordsEs        String?
  keywordsFr        String?
  
  // Open Graph
  ogImageAr         String?
  ogImageEn         String?
  ogImageEs         String?
  ogImageFr         String?
  
  // Schema Markup
  schemaMarkup      Json?
  
  // canonical URLs
  canonicalUrl      String?
  
  // حالة النشر
  isActive          Boolean  @default(true)
  
  // تواريخ النظام
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  
  @@map("page_seo")
}

// إدارة القوائم والتصنيفات
model Category {
  id            String   @id @default(cuid())
  type          CategoryType // product, blog, service
  
  // أسماء متعددة اللغات
  nameAr        String
  nameEn        String
  nameEs        String?
  nameFr        String?
  
  // وصف متعدد اللغات
  descriptionAr String?
  descriptionEn String?
  descriptionEs String?
  descriptionFr String?
  
  // معلومات إضافية
  slug          String   @unique
  icon          String?  // اسم الأيقونة
  color         String?  // لون التصنيف
  image         String?  // صورة التصنيف
  
  // ترتيب العرض
  sortOrder     Int      @default(0)
  
  // حالة النشر
  isActive      Boolean  @default(true)
  
  // Parent Category (للتصنيفات الفرعية)
  parentId      String?
  parent        Category? @relation("CategoryHierarchy", fields: [parentId], references: [id])
  children      Category[] @relation("CategoryHierarchy")
  
  // Relations
  blogPosts     BlogPost[] @relation("BlogCategory")
  
  // تواريخ النظام
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  
  @@map("categories")
}

// إدارة الصور والوسائط
model MediaFile {
  id            String   @id @default(cuid())
  filename      String
  originalName  String
  title         String?  // عنوان الصورة
  altText       String?  // النص البديل
  description   String?  // وصف الصورة
  
  // معلومات الملف
  mimetype      String
  size          Int
  width         Int?
  height        Int?
  
  // مسارات الملف
  path          String
  url           String
  thumbnailUrl  String?
  
  // تصنيف الوسائط
  category      MediaCategory @default(OTHER)
  
  // معلومات الرفع
  uploadedBy    String?   // User ID
  
  // حالة النشر
  isActive      Boolean  @default(true)
  
  // تواريخ النظام
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  
  @@map("media_files")
}

// إحصائيات الموقع
model SiteStats {
  id              String   @id @default(cuid())
  date            DateTime @unique @default(now())
  
  // إحصائيات الزوار
  visitors        Int      @default(0)
  pageViews       Int      @default(0)
  uniqueVisitors  Int      @default(0)
  
  // إحصائيات طلبات الأسعار
  quoteRequests   Int      @default(0)
  
  // إحصائيات الاتصال
  contactMessages Int      @default(0)
  
  // إحصائيات النشرة البريدية
  newSubscribers  Int      @default(0)
  
  @@map("site_stats")
}

enum Role {
  ADMIN
  EDITOR
  CUSTOMER
}

enum ProductCategory {
  MARBLE
  GRANITE
  QUARTZ
  SPECIAL
}

enum QuoteRequestStatus {
  PENDING     // في الانتظار
  REVIEWED    // تمت المراجعة
  PROCESSING  // قيد المعالجة
  QUOTED      // تم إرسال العرض
  ACCEPTED    // تم قبول العرض
  REJECTED    // تم رفض العرض
  COMPLETED   // مكتمل
  CANCELLED   // ملغي
}

enum Priority {
  LOW
  NORMAL
  HIGH
  URGENT
}

enum ContactStatus {
  NEW
  READ
  REPLIED
  CLOSED
}

enum NewsletterStatus {
  ACTIVE
  UNSUBSCRIBED
  BOUNCED
}

enum ContentType {
  TEXT          // نص عادي
  RICH_TEXT     // نص منسق HTML
  IMAGE         // صورة
  VIDEO         // فيديو
  AUDIO         // صوت
  FILE          // ملف
  JSON          // بيانات JSON
  NUMBER        // رقم
  BOOLEAN       // true/false
  DATE          // تاريخ
  URL           // رابط
}

enum CategoryType {
  PRODUCT       // تصنيفات المنتجات
  BLOG          // تصنيفات المدونة
  SERVICE       // تصنيفات الخدمات
  GALLERY       // تصنيفات المعرض
  FAQ           // تصنيفات الأسئلة الشائعة
}

enum MediaCategory {
  HERO          // صور رئيسية
  PRODUCT       // صور المنتجات
  GALLERY       // معرض الصور
  BLOG          // صور المدونة
  AVATAR        // صور شخصية
  LOGO          // شعارات
  ICON          // أيقونات
  DOCUMENT      // مستندات
  OTHER         // أخرى
}
